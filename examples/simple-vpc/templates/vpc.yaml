AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simple VPC with public and private subnets'

Parameters:
  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
    Default: 10.0.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP CIDR range

  EnableDnsHostnames:
    Type: String
    Description: Enable DNS hostnames in the VPC
    Default: 'true'
    AllowedValues: ['true', 'false']

  EnableDnsSupport:
    Type: String  
    Description: Enable DNS support in the VPC
    Default: 'true'
    AllowedValues: ['true', 'false']

  Environment:
    Type: String
    Description: Environment name
    Default: dev

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: !Ref EnableDnsHostnames
      EnableDnsSupport: !Ref EnableDnsSupport
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-vpc'
        - Key: Environment
          Value: !Ref Environment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-igw'
        - Key: Environment
          Value: !Ref Environment

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [0, !Cidr [!Ref VpcCidr, 4, 8]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-public-subnet'
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [1, !Cidr [!Ref VpcCidr, 4, 8]]
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-private-subnet'
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-public-route-table'
        - Key: Environment
          Value: !Ref Environment

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-private-route-table'
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

Outputs:
  VPCId:
    Description: ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub '${Environment}-VPC-ID'

  VPCCidr:
    Description: CIDR block of the VPC
    Value: !Ref VpcCidr
    Export:
      Name: !Sub '${Environment}-VPC-CIDR'

  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub '${Environment}-PublicSubnet-ID'

  PrivateSubnetId:
    Description: ID of the private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub '${Environment}-PrivateSubnet-ID'

  InternetGatewayId:
    Description: ID of the Internet Gateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub '${Environment}-IGW-ID'